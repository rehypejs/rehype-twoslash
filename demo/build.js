/**
 * @import {ElementContent, Root} from 'hast'
 */

import rehypeDocument from 'rehype-document'
import rehypeStringify from 'rehype-stringify'
import rehypeTwoslash from 'rehype-twoslash'
import remarkParse from 'remark-parse'
import remarkRehype from 'remark-rehype'
import {unified} from 'unified'
import {read, write} from 'to-vfile'
import {reporter} from 'vfile-reporter'

const css = String(await read(new URL('index.css', import.meta.url)))
const js = String(await read(new URL('index.js', import.meta.url)))
const file = await read(new URL('index.md', import.meta.url))

await unified()
  .use(remarkParse)
  .use(remarkRehype)
  .use(rehypeTwoslash)
  .use(main)
  .use(rehypeDocument, {
    css: [
      'https://esm.sh/github-markdown-css@5/github-markdown.css',
      'https://esm.sh/@wooorm/starry-night@3/style/both.css'
    ],
    style: css,
    title: '`rehype-twoslash` demo'
  })
  .use(rehypeStringify)
  .process(file)

file.extname = '.html'
await write(file)
file.stored = true

console.error(reporter(file))

function main() {
  /**
   * @param {Root} tree
   */
  return function (tree) {
    tree.children = [
      {
        type: 'comment',
        value:
          ' note: this file is generated by `build.js`, which generates HTML from `index.md` and includes `index.css` and `index.js`. '
      },
      {
        type: 'element',
        tagName: 'main',
        properties: {},
        children: [
          {
            type: 'element',
            tagName: 'div',
            properties: {className: ['markdown-body']},
            children: /** @type {Array<ElementContent>} */ (tree.children)
          }
        ]
      },
      {
        type: 'element',
        tagName: 'script',
        properties: {type: 'module'},
        children: [{type: 'text', value: js}]
      }
    ]
  }
}
